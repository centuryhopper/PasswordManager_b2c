@model IEnumerable<PasswordmanagerAccount>

@{
    ViewData["Title"] = "PasswordTable";
    ViewData["Controller"] = "PasswordManager";
    ViewData["Action"] = "PasswordTable";

    var pager = new Pager();
    int pageNo = 0;

    if (ViewBag.Pager is not null)
    {
        pager = ViewBag.Pager;
        pageNo = pager.CurrentPage;
    }
}

<style>
    .freeze_header {
        position: sticky;
        top: 0;
        background-color: #00A86B;
    }
</style>


<div class="text-center overflow-auto m-5">
    <partial name="_PaginationPartial" model="@pager">
    <table class="table-container table table-striped table-responsive table-bordered table-hover" id="password_table"
        style="width: 100%;">
        <thead class="freeze_header">
            <tr>
                <th class="freeze_header" scope="col">@Html.DisplayName("Row #")</th>
                <th class="freeze_header" scope="col">@Html.DisplayName("Actions")</th>
                <th class="freeze_header" scope="col">@Html.DisplayName("Title")</th>
                <th class="freeze_header" scope="col">@Html.DisplayName("Username")</th>
                <th class="freeze_header" scope="col">@Html.DisplayName("Password")</th>
                <th class="freeze_header" scope="col">@Html.DisplayName("Created On")</th>
                <th class="freeze_header" scope="col">@Html.DisplayName("Last Updated On")</th>
                <th class="freeze_header" scope="col">@Html.DisplayName("Update")</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var (i, passwordAccount) in Model.Select((passwordAccount, i) => (i, passwordAccount)))
            {
                @Html.HiddenFor(_=>passwordAccount.Userid)
                <tr>
                    <td>
                        <span>@(i + 1)</span>
                    </td>
                    <td>
                        <div><a class="Edit" href="javascript:;">EDIT</a></div>
                        <div><a class="Delete" href="javascript:;">DELETE</a></div>
                        <div><a class="ConfirmDelete" href="javascript:;" style="display:none">CONFIRM</a></div>
                        <div><a class="Cancel" href="javascript:;" style="display:none">CANCEL</a></div>
                    </td>
                    <td>
                        <span>@passwordAccount.Title</span>
                        @Html.TextBoxFor(_=>passwordAccount.Title, new {style="display:none;width:100px"})
                    </td>
                    <td>
                        <span>@passwordAccount.Username</span>
                        @Html.TextBoxFor(_=>passwordAccount.Username, new {style="display:none;width:100px"})
                    </td>
                    <td>
                        <span>@passwordAccount.Password</span>
                        @Html.TextBoxFor(_=>passwordAccount.Password, new {style="display:none;width:100px"})
                    </td>
                    <td>
                        <span>@passwordAccount.CreatedAt</span>
                    </td>
                    <td>
                        <span>@passwordAccount.LastUpdatedAt</span>
                    </td>
                    <td>
                        <a class="Update" style="pointer-events: none; color: gray; text-decoration: none;">UPDATE</a>
                        @Html.HiddenFor(_=>passwordAccount.Id)
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<partial name="_PaginationPartial" model="@pager">

<div class="row gy-3 m-5">
    <div>
        <label for="add_rows">Number of Rows:</label>
        <input id="add_rows" type="text" class="form-control" style="width: 300px" step="any" onkeypress="ValidateNumber(event);">
    </div>
    <div>
        <button class="btn btn-primary" onclick="AddRows()" style="width: 300px">Add</button>
    </div>
</div>


@section Scripts {
    <partial name="_ValidationScriptsPartial">
    
    <script type="text/javascript">
        $(document).ready(() =>
        {
            $("body").on("click", "#password_table .Edit", function ()
            {
                let row = $(this).closest("tr")

                row.find("td").each(function ()
                {
                    console.log('editing!');
                    if ($(this).find("input").length > 0)
                    {
                        $(this).find('input').show()
                        $(this).find('span').hide()
                    }
                });

                // reorganize action buttons
                row.find('.Update').removeAttr('style')
                row.find('.Update').attr('href', 'javascript:;')
                row.find('.Cancel').show()
                row.find('.Delete').hide()
                $(this).hide()
            });

            $("body").on("click", "#password_table .Cancel", function ()
            {
                let row = $(this).closest("tr")

                row.find("td").each(function ()
                {
                    if ($(this).find("select").length > 0)
                    {
                        $(this).find('select').hide()
                        $(this).find('span').show()
                    }
                    else if ($(this).find("input").length > 0)
                    {
                        $(this).find('input').hide()
                        $(this).find('span').show()
                    }
                });

                // reorganize action buttons
                row.find('.Update').attr('style', 'pointer-events: none; color: gray; text-decoration: none;');
                row.find('.Update').removeAttr('href')
                row.find('.Edit').show()
                row.find('.Delete').show()
                row.find('.ConfirmDelete').hide()
                $(this).hide()
            });

            $("body").on("click", "#password_table .Update", function ()
            {
                let row = $(this).closest("tr")

                // grab all values from the columns and perform validation check
                const rowVals = new Map()

                row.find("td").each(function (idx)
                {
                    if ($(this).find("input").length > 0)
                    {
                        let input = $(this).find('input')
                        let thName = $('#password_table').find('th').eq(idx).text();
                        rowVals.set(thName, input.val())
                    }
                    else if ($(this).find("span").length > 0)
                    {
                        let span = $(this).find('span')
                        let thName = $('#password_table').find('th').eq(idx).text();
                        rowVals.set(thName, span.text())
                    }
                })

                // table column header names are used as keys for the map
                var model = {
                    Id: row.find("td:last input").val().trim(),
                    Title: rowVals.get('Title'),
                    Username: rowVals.get('Username'),
                    Password: rowVals.get('Password'),
                    CreatedAt: rowVals.get('Created On')
                }

                row.find("td").each(function (idx)
                {
                    if ($(this).find("input").length > 0)
                    {
                        let span = $(this).find('span')
                        let input = $(this).find('input')
                        span.html(input.val())
                        span.show()
                        input.hide()
                    }
                });

                // reorganize action buttons for update
                row.find('.Edit').show()
                row.find('.Delete').show()
                row.find('.Cancel').hide()

                $(this).attr('style', 'pointer-events: none; color: gray; text-decoration: none;');
                $(this).removeAttr('href');

                $.ajax({
                    url: "@Url.Action("UpdatePasswordAccount", "PasswordManager")",
                    type: 'POST',
                    data: { model },
                    datatype: "json",
                    success: function (res)
                    {
                        //console.log(res);
                        location.reload()
                    },
                    error: function (req, status, error)
                    {
                        console.log(req);
                        console.log(status);
                        console.log(error);
                    }
                });
            });

            $("body").on("click", "#password_table .Delete", function ()
            {
                let row = $(this).closest("tr")

                // reorganize action buttons
                row.find('.Cancel').show()
                row.find('.ConfirmDelete').show()
                row.find('.Edit').hide()
                $(this).hide()
            })

            $("body").on("click", "#password_table .ConfirmDelete", function ()
            {
                let row = $(this).closest("tr")
                // console.log(row);

                // get the hidden row
                let id = row.find("td:last input").val().trim()
                // console.log(id);

                var model = {
                    Id: id,
                    Userid: '@ViewBag.userid'
                }

                // make ajax call to delete that row in the server so we can re-render the page
                $.ajax({
                    url: "@Url.Action("DeletePasswordAccount", "PasswordManager")",
                    type: 'POST',
                    data: { model },
                    datatype: "json",
                    success: function(res) {
                        location.reload()
                    },
                    error: function(req, status, error)
                    {
                        console.log(req);
                        console.log(status);
                        console.log(error);
                    }
                })

                
            });

        }); // end doc.ready
    
    
        function AddRows() {
            let numRows = $('#add_rows').val()

            if (numRows === '')
            {
                // uses animate.css
                Swal.fire({
                    title: 'Please enter the number of rows you want to enter.',
                    showClass: {
                        popup: 'animate__animated animate__fadeInDown'
                    },
                    hideClass: {
                        popup: 'animate__animated animate__fadeOutUp'
                    }
                });
                return
            }

            if (numRows > 5)
            {
                // uses animate.css
                Swal.fire({
                    title: 'You cannot add more than 5 rows at a time. Please import a csv file instead if you have a need to do so.',
                    showClass: {
                        popup: 'animate__animated animate__fadeInDown'
                    },
                    hideClass: {
                        popup: 'animate__animated animate__fadeOutUp'
                    }
                });
                return
            }

            $.ajax({
                url: "@Url.Action("AddRows", "PasswordManager")",
                type: 'POST',
                data: { numRows },
                datatype: "json",
                success: function(res) {
                    //console.log('add row success');
                    // refresh page to show results
                    location.reload()
                },
                error: function(req, status, error)
                {
                    console.log(req);
                    console.log(status);
                    console.log(error);
                }
            }); 
        }
    </script>
}
